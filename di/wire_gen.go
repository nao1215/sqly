// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/nao1215/sqly/config"
	"github.com/nao1215/sqly/infrastructure/persistence/csv"
	"github.com/nao1215/sqly/infrastructure/persistence/sqlite3"
	"github.com/nao1215/sqly/shell"
	"github.com/nao1215/sqly/usecase"
)

// Injectors from wire.go:

// NewShell initailize main class of sqly application.
// The return function is the function to close the DB.
func NewShell() (*shell.Shell, func(), error) {
	arg, err := config.NewArg()
	if err != nil {
		return nil, nil, err
	}
	commandList := shell.NewCommands()
	history := shell.NewHistory()
	interactive := shell.NewInteractive(history)
	csvRepository := csv.NewCSVRepository()
	csvInteractor := usecase.NewCSVInteractor(csvRepository)
	db, cleanup, err := config.NewDB()
	if err != nil {
		return nil, nil, err
	}
	sqLite3Repository := sqlite3.NewSQLite3Repository(db)
	sqLite3Interactor := usecase.NewSQLite3Interactor(sqLite3Repository)
	shellShell := shell.NewShell(arg, commandList, interactive, csvInteractor, sqLite3Interactor)
	return shellShell, func() {
		cleanup()
	}, nil
}
